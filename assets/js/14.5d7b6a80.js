(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{191:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"result"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#result","aria-hidden":"true"}},[t._v("#")]),t._v(" Result")]),t._v(" "),s("h2",{attrs:{id:"overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),s("p",[t._v("How to view the generated scenario.")]),t._v(" "),s("h2",{attrs:{id:"repository"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#repository","aria-hidden":"true"}},[t._v("#")]),t._v(" Repository")]),t._v(" "),s("p",[t._v("This is the space where the generated scenario is saved. It should be set before creating the scenario. When the repository is not set up, a repository folder will be created in the subfolder. Other paths can be set as shown below.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("xen"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_repository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c:\\\\xenarix'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("The following structure is stored in the configured repository.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("repository\n├─ cali_input_file              # Input file folder to be used for parameter estimation\n│  ├─ cali_input1.txt           # Input file to be used for parameter estimation\n│  └─ cali_input2.txt    \n│\n├─ cali_results                 # Estimated Parameter\n│\n├─ scen_input_file              # Input file folder to be used for scenario generation\n│  ├─ scen_input1.txt           # Input file to be used for scenario generation\n│  └─ scen_input2.txt    \n│\n├─ scen_results                 # Scenario creation result folder\n│  ├─ set1                       \n│  │  ├─ scen_id1                \n│  │  │  ├─ result_id1           \n│  │  │  │  ├─ 20150902_SCEN1_BASE.TXT   \n│  │  │  │  ├─ 20150902_SCEN1_BASE_KOSPI200_VALUE.SCN  \n│  │  │  │  ├─ 20150902_SCEN1_SHOCK2.TXT   \n│  │  │  │  ├─ 20150902_SCEN1_SHOCK2_KOSPI200_VALUE.SCN  \n│  │  │  │  ├─ INPUTINFO.TXT  \n│  │  │  │  ├─ RESULTINFO.TXT  \n│  │  │  │  └─ TIMEGRIDINFO.TXT  \n│  │  │  │ \n│  │  │  └─ result_id2   \n│  │  └─ scen_id2       \n│  │     ├─ result_id1\n│  │     └─ result_id2\n│  └─ set2\n│     └─ scen_id1\n│        ├─ result_id1\n│        └─ result_id2\n│\n└─ settings              \n")])])]),s("h2",{attrs:{id:"get-results"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-results","aria-hidden":"true"}},[t._v("#")]),t._v(" Get Results")]),t._v(" "),s("p",[t._v("The result of the generated scenario can be retrieved after creating ResultObj as shown below.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" xenarix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("results "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" xen_r\n\nres "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" xen_r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ResultObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'set1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'scen_id1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'result_id1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"timegrid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#timegrid","aria-hidden":"true"}},[t._v("#")]),t._v(" TimeGrid")]),t._v(" "),s("p",[t._v("The section where the scenario was created. The interval from the set base date to the final maturity is stored in the TIMEGRIDINFO.TXT file in the each result folder.")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("timegrid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timegrid\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" timegrid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pandas(INDEX=16L, DATE='2015-09-18', T=0.043835616438356005, DT=0.0027397260273970005)")]),t._v("\n\n")])])])])},[],!1,null,null,null);e.default=n.exports}}]);